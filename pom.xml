<?xml version="1.0" encoding="UTF-8"?>
<!--

    Sonatype Nexus (TM) Open Source Version
    Copyright (c) 2007-2012 Sonatype, Inc.
    All rights reserved. Includes the third-party code listed at http://links.sonatype.com/products/nexus/oss/attributions.

    This program and the accompanying materials are made available under the terms of the Eclipse Public License Version 1.0,
    which accompanies this distribution and is available at http://www.eclipse.org/legal/epl-v10.html.

    Sonatype Nexus (TM) Professional Version is available from Sonatype, Inc. "Sonatype" and "Sonatype Nexus" are trademarks
    of Sonatype, Inc. Apache Maven is a trademark of the Apache Software Foundation. M2eclipse is a trademark of the
    Eclipse Foundation. All other trademarks are the property of their respective owners.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>org.sonatype.nexus</groupId>
  <artifactId>nexus-aggregator</artifactId>
  <version>2.3-SNAPSHOT</version>

  <packaging>pom</packaging>
  <name>Nexus : Aggregator</name>
  <description>Sonatype Nexus Aggregator</description>

  <scm>
    <connection>scm:git:git://github.com/sonatype/nexus.git</connection>
    <developerConnection>scm:git:git@github.com:sonatype/nexus.git</developerConnection>
    <url>https://github.com/sonatype/nexus</url>
  </scm>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <arguments>-Dtest=VOID -Dit.test=VOID</arguments>
  </properties>

  <prerequisites>
    <maven>3.0.4</maven>
  </prerequisites>

  <modules>
    <module>nexus-runtime-platform</module>
    <module>nexus</module>
    <module>nexus-plugin-archetype</module>
  </modules>

  <build>
    <plugins>
      <plugin>
        <groupId>com.mycila.maven-license-plugin</groupId>
        <artifactId>maven-license-plugin</artifactId>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <!-- Manually run with: mvn clean com.mycila.maven-license-plugin:maven-license-plugin:1.9.0:format -->
        <plugin>
          <groupId>com.mycila.maven-license-plugin</groupId>
          <artifactId>maven-license-plugin</artifactId>
          <version>1.9.0</version>
          <configuration>
            <header>header-eplv1.txt</header>
            <encoding>UTF-8</encoding>
            <strictCheck>true</strictCheck>
            <useDefaultExcludes>false</useDefaultExcludes>
            <includes>
              <include>**/*.java</include>
              <include>**/*.vm</include>
              <include>**/*.xml</include>
              <include>**/*.groovy</include>
              <include>**/*.aj</include>
              <include>**/*.css</include>
              <include>**/*.html</include>
              <include>**/*.js</include>
            </includes>
            <excludes>
              <!-- we have target pattern in this format because of target package in nexus-api and nexus-proxy modules -->
              <exclude>**/nexus*/target/**</exclude>
              <exclude>**/nexus-ldap-plugin-parent/ldap-common/target/**</exclude>
              <exclude>**/ext-2.3/**</exclude>
              <exclude>**/ext-3.4.0/**</exclude>
              <exclude>**/js/filetree/**</exclude>
              <exclude>**/editarea_0_8_2/**</exclude>
              <exclude>**/org/sonatype/security/ldap/dao/password/hash/MD5Crypt.java</exclude>
              <!-- FIXME is this really a good idea excluding all test resources? -->
              <exclude>**/src/test/resources/**</exclude>
              <exclude>**/nexus-test-harness-its/resources/**</exclude>
              <exclude>**/gwt/ext/ui/**/*.js</exclude>
              <exclude>**/gwt/ext/ui/**/*.css</exclude>
              <!-- already has a lgpl license -->
              <exclude>**/Ext.ux.form.LovCombo.css</exclude>
              <!-- grid makes this directory -->
              <exclude>.maven/**</exclude>
              <!-- eclipse makes this directory -->
              <exclude>**/.settings/**</exclude>
              <!-- temp file created by maven-shade-plugin in basedir, deleted on maven jvm exit but possibly still around during license check -->
              <exclude>**/dependency-reduced-pom.xml</exclude>
              <!-- netbeans adds these -->
              <exclude>**/nbactions*.xml</exclude>
              <exclude>**/nb-configuration.xml</exclude>
              <!-- IntelliJ IDEA files-->
              <exclude>**/.idea/**</exclude>
              <exclude>**/atlassian-ide-plugin.xml</exclude>
              <exclude>nexus-plugin-archetype/src/main/resources/archetype-resources/**</exclude>
              <exclude>nexus/nexus-webapp/src/main/webapp/js/ext/ux/**</exclude>
              <exclude>nexus/nexus-webapp/src/main/webapp/style/ext/ux/**</exclude>
              <!-- tell license plugin to ignore workaround for MINDEXER-65 -->
              <exclude>nexus/nexus-core-plugins/nexus-indexer-lucene-plugin-parent/nexus-indexer-lucene-plugin/src/main/java/copied/org/apache/maven/index/DefaultScannerListener.java</exclude>
            </excludes>
            <mapping>
              <vm>SHARPSTAR_STYLE</vm>
              <groovy>JAVADOC_STYLE</groovy>
              <aj>JAVADOC_STYLE</aj>
            </mapping>
            <properties>
              <year>2012</year>
            </properties>
            <!-- this is important for multi-module project -->
            <aggregate>true</aggregate>
          </configuration>
          <goals>
            <goal>check</goal>
          </goals>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.2.1</version>
          <configuration>
            <autoVersionSubmodules>true</autoVersionSubmodules>
            <!-- forge-parent settings -->
            <useReleaseProfile>false</useReleaseProfile>
            <goals>deploy</goals>
            <!--<arguments>-Prelease</arguments>-->
            <arguments>${arguments}</arguments>
            <preparationGoals /> 
            <releaseProfiles>release,tattletale,optimize-js</releaseProfiles>
            <tagNameFormat>nexus-@{version}</tagNameFormat>
          </configuration>
        </plugin>
        <!-- do not deploy aggregator POM -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <configuration>
            <skip>true</skip>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

  </build>

  <profiles>
    <profile>
      <id>nexus-maven-plugins</id>
      <!-- HACK we leave out nexus-maven-plugins by default because when we release with it as part of aggregator -->
      <!-- maven-release-plugin borks. It will be removed out after 2.1 anyways, then this profile no longer needed -->
      <modules>
        <module>nexus-maven-plugins</module>
      </modules>
    </profile>
  </profiles>

</project>
