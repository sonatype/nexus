<?xml version="1.0"?>
<!--

    Sonatype Nexus (TM) Open Source Version
    Copyright (c) 2007-2012 Sonatype, Inc.
    All rights reserved. Includes the third-party code listed at http://links.sonatype.com/products/nexus/oss/attributions.

    This program and the accompanying materials are made available under the terms of the Eclipse Public License Version 1.0,
    which accompanies this distribution and is available at http://www.eclipse.org/legal/epl-v10.html.

    Sonatype Nexus (TM) Professional Version is available from Sonatype, Inc. "Sonatype" and "Sonatype Nexus" are trademarks
    of Sonatype, Inc. Apache Maven is a trademark of the Apache Software Foundation. M2eclipse is a trademark of the
    Eclipse Foundation. All other trademarks are the property of their respective owners.

-->
<!DOCTYPE Configure PUBLIC "-//Mort Bay Consulting//DTD Configure//EN" "http://jetty.mortbay.org/configure.dtd">

<!-- ============================================================ -->
<!--                                                              -->
<!--  NOTE: Copy this file to ../jetty.xml to use it.             -->
<!--                                                              -->
<!-- For help using this configuration, see:                      -->
<!--                                                              -->
<!--   http://links.sonatype.com/products/nexus/oss/docs-jetty    -->
<!--                                                              -->
<!-- ============================================================ -->
<Configure id="Server" class="org.eclipse.jetty.server.Server">
    <Call name="addConnector">
        <Arg>
            <New class="org.eclipse.jetty.server.nio.SelectChannelConnector">
                <Set name="host">${application-host}</Set>
                <Set name="port">${application-port}</Set>
            </New>
        </Arg>
    </Call>

    <Set name="handler">
        <New id="Contexts" class="org.eclipse.jetty.server.handler.ContextHandlerCollection">
            <!-- The following configuration disables JSP taglib support, the validation of which
                 slows down Jetty's startup significantly. -->
            <Call name="addLifeCycleListener">
                <Arg>
                    <New class="org.sonatype.plexus.jetty.custom.DisableTagLibsListener"/>
                </Arg>
            </Call>
        </New>
    </Set>

    <New id="NexusWebAppContext" class="org.eclipse.jetty.webapp.WebAppContext">
        <Arg>
            <Ref id="Contexts"/>
        </Arg>
        <Arg>${nexus-webapp}</Arg>
        <Arg>${nexus-webapp-context-path}</Arg>
        <Set name="extractWAR">false</Set>
    </New>

    <Set name="stopAtShutdown">true</Set>
    <Set name="sendServerVersion">true</Set>
    <Set name="sendDateHeader">true</Set>
    <Set name="gracefulShutdown">1000</Set>

    <!-- ================= -->
    <!-- JMX Configuration -->
    <!-- ================= -->

    <Call id="MBeanServer" class="java.lang.management.ManagementFactory" name="getPlatformMBeanServer"/>

    <New id="MBeanContainer" class="org.eclipse.jetty.jmx.MBeanContainer">
        <Arg>
            <Ref id="MBeanServer"/>
        </Arg>
    </New>

    <Get id="Container" name="container">
        <Call name="addEventListener">
            <Arg>
                <Ref id="MBeanContainer"/>
            </Arg>
        </Call>
    </Get>

    <Call name="addBean">
        <Arg>
            <Ref id="MBeanContainer"/>
        </Arg>
    </Call>

    <Get id="Logger" class="org.eclipse.jetty.util.log.Log" name="log"/>
    <Ref id="MBeanContainer">
        <Call name="addBean">
            <Arg>
                <Ref id="Logger"/>
            </Arg>
        </Call>
    </Ref>

    <!-- In order to connect to the JMX server remotely from a different
        process, possibly running on a different host, Jetty JMX module
        can create a remote JMX connector. It requires RMI registry to
        be started prior to creating the connector server because the
        JMX specification uses RMI to facilitate connections.
    -->

    <!-- Optionally start the RMI registry. Normally RMI registry runs on
         port 1099. The argument below can be changed in order to comply
         with the firewall requirements.
    -->
    <Call name="createRegistry" class="java.rmi.registry.LocateRegistry">
        <Arg type="java.lang.Integer">1099</Arg>
        <Call name="sleep" class="java.lang.Thread">
            <Arg type="java.lang.Integer">1000</Arg>
        </Call>
    </Call>

    <!-- Optionally add a remote JMX connector. The parameters of the constructor
         below specify the JMX service URL, and the object name string for the
         connector server bean. The parameters of the JMXServiceURL constructor
         specify the protocol that clients will use to connect to the remote JMX
         connector (RMI), the hostname of the server (local hostname), port number
         (automatically assigned), and the URL path. Note that URL path contains
         the RMI registry hostname and port number, that may need to be modified
         in order to comply with the firewall requirements.
    -->
    <New id="ConnectorServer" class="org.eclipse.jetty.jmx.ConnectorServer">
        <Arg>
            <New class="javax.management.remote.JMXServiceURL">
                <Arg type="java.lang.String">rmi</Arg>
                <Arg type="java.lang.String"/>
                <Arg type="java.lang.Integer">0</Arg>
                <Arg type="java.lang.String">/jndi/rmi://localhost:1099/jmxrmi</Arg>
            </New>
        </Arg>
        <Arg>org.eclipse.jetty:name=rmiconnectorserver</Arg>
        <Call name="start"/>
    </New>

</Configure>
