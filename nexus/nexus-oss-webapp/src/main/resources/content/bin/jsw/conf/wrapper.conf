# JSW Configuration file
#
# For complete coverage of available configuration, please go here:
# http://wrapper.tanukisoftware.org/doc/english/properties.html
#
# Some "most often used" keywords are added to end of this file
# to be used as a "guideline". They are NOT the complete list of
# keywords.

# Set the JSW working directory (used as base for resolving relative paths)
wrapper.working.dir=../../..

# Set the JVM executable 
# (modify this to absolute path if you need a Java that is not on the OS path)
wrapper.java.command=java

# The main class that JSW will execute within JVM
wrapper.java.mainclass=org.sonatype.plexus.jetty.Jetty7WrapperListener

# The JVM classpath
wrapper.java.classpath.1=bin/jsw/lib/wrapper-3.2.3.jar
wrapper.java.classpath.2=./lib/*.jar
wrapper.java.classpath.3=./conf/

# The library path
wrapper.java.library.path.1=bin/jsw/lib

# Additional JVM parameters (tune if needed, but match the sequence of numbers!)
wrapper.java.additional.1=-Dsun.net.inetaddr.ttl=3600
wrapper.java.additional.2=-DbundleBasedir=.
wrapper.java.additional.3=-Djava.io.tmpdir=./tmp
wrapper.java.additional.4=-DjettyContext=nexus.properties
wrapper.java.additional.5=-DjettyContextIncludeKeys=bundleBasedir
wrapper.java.additional.6=-DjettyPlexusCompatibility=true
#wrapper.java.additional.7=-Xdebug
#wrapper.java.additional.8=-Xnoagent
#wrapper.java.additional.9=-Djava.compiler=NONE
#wrapper.java.additional.10=-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
#wrapper.java.additional.11=-XX:+HeapDumpOnOutOfMemoryError

wrapper.app.parameter.1=./conf/jetty.xml

# Size Java memory, in MB (-Xms)
#wrapper.java.initmemory=128
# Size Java memory, in MB (-Xmx)
#wrapper.java.maxmemory=256

# How much to wait for JVM to respond to "ping" (increase on slower machines and VMs if needed)
wrapper.ping.timeout=90
# How much to wait for application to start up (increase on slower machines if needed)
wrapper.startup.timeout=90

# Make wrapper reload configuration between app restarts
# and set exit code 12 as "RESTART" command
wrapper.restart.reload_configuration=TRUE
wrapper.on_exit.12=RESTART

# Set up JSW logging
wrapper.logfile=logs/wrapper.log
wrapper.logfile.format=PM
wrapper.logfile.loglevel=INFO
wrapper.logfile.maxsize=10m
wrapper.logfile.maxfiles=10

# Set up system logging (if needed, change to INFO or other valid values)
wrapper.syslog.loglevel=NONE

# Set up JSW Console
wrapper.console.title=Nexus OSS
wrapper.console.format=PM
wrapper.console.loglevel=INFO
wrapper.console.flush=true

# Set up JSW as NT Service (unused on other OSes)
wrapper.ntservice.name=nexus-webapp
wrapper.ntservice.displayname=nexus
wrapper.ntservice.description=Nexus OSS
wrapper.ntservice.dependency.1=
wrapper.ntservice.starttype=AUTO_START
wrapper.ntservice.interactive=false


# =============================================
# An example wrapper.conf file is included
# below for quick reference
# =============================================

# ********************************************************************
# Wrapper Java Properties
# ********************************************************************
# Java Application
#wrapper.java.command=java

# Tell the Wrapper to log the full generated Java command line.
#wrapper.java.command.loglevel=INFO

# Java Main class.  This class must implement the WrapperListener interface
#  or guarantee that the WrapperManager class is initialized.  Helper
#  classes are provided to do this for you.  See the Integration section
#  of the documentation for details.
#wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp

# Java Classpath (include wrapper.jar)  Add class path elements as
#  needed starting from 1
#wrapper.java.classpath.1=../lib/wrapper.jar

# Java Library Path (location of Wrapper.DLL or libwrapper.so)
#wrapper.java.library.path.1=../lib

# Java Bits.  On applicable platforms, tells the JVM to run in 32 or 64-bit mode.
#wrapper.java.additional.auto_bits=TRUE

# Java Additional Parameters
#wrapper.java.additional.1=

# Initial Java Heap Size (in MB)
#wrapper.java.initmemory=3

# Maximum Java Heap Size (in MB)
#wrapper.java.maxmemory=64

# Application parameters.  Add parameters as needed starting from 1
#wrapper.app.parameter.1=<YourMainClass>

# ********************************************************************
# Wrapper Logging Properties
# ********************************************************************
# Enables Debug output from the Wrapper.
#wrapper.debug=TRUE

# Format of output for the console.  (See docs for formats)
#wrapper.console.format=PM

# Log Level for console output.  (See docs for log levels)
#wrapper.console.loglevel=INFO

# Log file to use for wrapper output logging.
#wrapper.logfile=../logs/wrapper.log

# Format of output for the log file.  (See docs for formats)
#wrapper.logfile.format=LPTM

# Log Level for log file output.  (See docs for log levels)
#wrapper.logfile.loglevel=INFO

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
#wrapper.logfile.maxsize=0

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
#wrapper.logfile.maxfiles=0

# Log Level for sys/event log output.  (See docs for log levels)
#wrapper.syslog.loglevel=NONE

# ********************************************************************
# Wrapper General Properties
# ********************************************************************
# Allow for the use of non-contiguous numbered properties
#wrapper.ignore_sequence_gaps=TRUE

# Title to use when running as a console
#wrapper.console.title=@app.long.name@

# ********************************************************************
# Wrapper Windows NT/2000/XP Service Properties
# ********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# Name of the service
#wrapper.name=@app.name@

# Display name of the service
#wrapper.displayname=@app.long.name@

# Description of the service
#wrapper.description=@app.description@

# Service dependencies.  Add dependencies as needed starting from 1
#wrapper.ntservice.dependency.1=

# Mode in which the service is installed.  AUTO_START, DELAY_START or DEMAND_START
#wrapper.ntservice.starttype=AUTO_START

# Allow the service to interact with the desktop.
#wrapper.ntservice.interactive=false

# Use an properties override file that will allow the file bellow, if exists, to override properties from this file
# !!! Do not change location of the following line: This must be by the end of the file in order to work properly
#include ../../../conf/wrapper-override.conf

